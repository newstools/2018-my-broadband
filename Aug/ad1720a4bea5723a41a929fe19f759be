After years of tinkering, the dynamic programming language Julia 1.0 was officially released to the public during JuliaCon, an annual conference of Julia users held recently in London. The release of Julia 1.0 is a huge Julia milestone since MIT Professor Alan Edelman, Jeff Bezanson, Stefan Karpinski, and Viral Shah released Julia to developers in 2012, says Edelman. “Julia has been revolutionizing scientific and technical computing since 2009,” says Edelman, the year the creators started working on a new language that combined the best features of Ruby, MatLab, C, Python, R, and others. Edelman is director of the Julia Lab at MIT and one of the co-creators of the language at MIT’s Computer Science and Artificial Intelligence Lab (CSAIL). Julia, which was developed and incubated at MIT, is free and open source, with more than 700 active open source contributors, 1,900 registered packages, 41,000 GitHub stars, 2 million downloads, and a reported 101 percent annual rate of download growth. It is used at more than 700 universities and research institutions and by companies such as Aviva, BlackRock, Capital One, and Netflix. At MIT, Julia users and developers include professors Steven Johnson, Juan Pablo Vielma, Gilbert Strang, Robin Deits, Twan Koolen, and Robert Moss. Julia is also used by MIT Lincoln Laboratory and the Federal Aviation Administration to develop the Next-Generation Airborne Collision Avoidance System (ACAS-X), by the MIT Operations Research Center to optimize school bus routing for Boston Public Schools, and by the MIT Robot Locomotion Group for robot navigation and movement. Julia is the only high-level dynamic programming language in the “petaflop club,” having achieved 1.5 petaflop/s using 1.3 million threads, 650,000 cores and 9,300 Knights Landing (KNL) nodes to catalogue 188 million stars, galaxies, and other astronomical objects in 14.6 minutes on the world’s sixth-most powerful supercomputer. Julia is also used to power self-driving cars and 3-D printers, as well as applications in precision medicine, augmented reality, genomics, machine learning, and risk management. “The release of Julia 1.0 signals that Julia is now ready to change the technical world by combining the high-level productivity and ease of use of Python and R with the lightning-fast speed of C++,” Edelman says. MIT News